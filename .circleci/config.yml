# ~/.circleci/config.yml

version: 2.1

orbs:
  gcp-gcr: circleci/gcp-gcr@0.13.0
  cloudrun: circleci/gcp-cloud-run@1.0.2

jobs:
  test:
    docker:
      - image: cimg/node:16.13.2
    parallelism: 4

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: yarn lint
      - run: yarn format:check
      - run: yarn test
      - run: yarn test:cov
      - run: yarn test:e2e

  build-stage:
    machine: true
    steps:
      - checkout
      - run: docker build --target builder -t makifdb/atolye15-demo:lasest .
      - run: docker build --target installer -t makifdb/atolye15-demo:lasest .
      - run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: docker push makifdb/atolye15-demo
      - run:
          name: Stage Build Mail
          command: sh ./.circleci/scripts/stage-mail.sh

  build-production:
    machine: true
    steps:
      - checkout
      - run: docker build -t makifdb/atolye15-demo:produciton .
      - run: docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
      - run: docker push makifdb/atolye15-demo
      - run:
          name: Production Build Mail
          command: sh ./.circleci/scripts/production-mail.sh
      - gcp-gcr/gcr-auth:
          gcloud-service-key: GOOGLE_CLOUD_KEYS
          google-project-id: GOOGLE_PROJECT_ID
          google-compute-zone: GOOGLE_COMPUTE_ZONE
      - cloudrun/deploy:
          platform: 'managed'
          image: 'makifdb/atolye15-demo:produciton'
          service-name: 'orb-gcp-cloud-run'
          region: $GOOGLE_COMPUTE_ZONE
          unauthenticated: true

  deploy:
    docker:
      - image: google/cloud-sdk:slim
    steps:
      - checkout
      - run:
          name: Deploy GCloud
          command: |
            echo ${GCLOUD_SERVICE_KEY} > /tmp/sa_key.json
            gcloud auth activate-service-account --key-file=/tmp/sa_key.json
            rm /tmp/sa_key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet app deploy

workflows:
  version: 2
  test-build-and-deploy:
    jobs:
      - test
      - build-stage:
          requires:
            - test
          filters:
            branches:
              only: develop
      - build-production:
          requires:
            - test
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build-stage
